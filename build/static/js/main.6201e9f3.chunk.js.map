{"version":3,"sources":["components/MessageList.js","index.js"],"names":["MessageList","messageSet","Set","filtered","messages","filter","message","data","uuid","content","jsonData","JSON","stringify","has","add","options","defaultSortName","sortIndicator","sizePerPageList","text","value","length","sizePerPage","result","map","item","uuidv4","Container","Row","Col","height","maxHeight","pagination","striped","hover","selectRow","mode","bgColor","deleteRow","isKey","dataField","hidden","dataSort","dataFormat","cell","row","Date","toLocaleString","undefined","weekday","day","month","year","hour","minute","App","Component","render","document","getElementById"],"mappings":"gkEAOe,SAASA,IACpB,IACMC,EAAa,IAAIC,IAAI,IA2CrBC,EAA0BC,IA/BRC,QAAO,SAACC,GACpB,IAAMC,EAAO,CACTC,KAAMF,EAAQE,KACdC,QAASH,EAAQG,SAEfC,EAAWC,KAAKC,UAAUL,GAChC,OAAIN,EAAWY,IAAIH,KAGfT,EAAWa,IAAIJ,IACR,MAuCvB,IAAMK,EAAU,CACZC,gBAAiB,SACjBC,eAAe,EACfC,gBAAiB,CAAC,CACdC,KAAM,IAAKC,MAAO,GACnB,CACCD,KAAM,KAAMC,MAAO,IACpB,CACCD,KAAM,KAAMC,MAAO,IACpB,CACCD,KAAM,MAAOC,MAAOjB,EAASkB,SAEjCC,YAAa,GAWXC,EAASpB,EAASqB,KAAI,SAAAC,GACxB,OAAO,eAAKA,EAAZ,CAAkBjB,KAAMkB,oBAG5B,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,iBAAD,CAAgBtB,KAAMgB,EAAQO,OAAO,OAAOC,UAAU,QAAQC,YAAY,EAAMC,SAAO,EAACC,OAAK,EAACnB,QAASA,EAASoB,UAf1G,CAClBC,KAAM,WACNC,QAAS,WAa6IC,WAAW,GACjJ,kBAAC,oBAAD,CAAmBC,OAAK,EAACC,UAAU,OAAOC,QAAM,GAAhD,WACA,kBAAC,oBAAD,CAAmBD,UAAU,cAA7B,qBACA,kBAAC,oBAAD,CAAmBA,UAAU,WAA7B,oBACA,kBAAC,oBAAD,CAAmBA,UAAU,SAASE,UAAU,EAAMC,WAhD1E,SAAuBC,EAAMC,GAUzB,OATc,IAAIC,KAAKF,GACJG,oBAAeC,EAAW,CACzCC,QAAS,QACTC,IAAK,UACLC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,cAwCI,iB,IChGlBC,E,iLAGF,OAAO,kBAAC5B,EAAA,EAAD,KACL,kBAAC3B,EAAD,W,GAJYwD,aASlBC,iBAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6201e9f3.chunk.js","sourcesContent":["import React from 'react';\nimport { messages } from '../data.json';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function MessageList() {\n    const USE_JSON_FILTER = true;\n    const messageSet = new Set([]);\n\n    const uuids = {};\n\n\n    //filter duplicates \n    // I came up with 2 different approaches to do filtering feature \n\n    const dedupeMessages = messages => {\n        //Using JSON.Stringify to serialize each message's uuid and content into a unique format and a Set to dedup \n        //benefit of this approach is that serializing objects is a standard practice \n        if (USE_JSON_FILTER) {\n            return messages.filter((message) => {\n                const data = {\n                    uuid: message.uuid,\n                    content: message.content\n                }\n                const jsonData = JSON.stringify(data)\n                if (messageSet.has(jsonData)) {\n                    return false\n                } else {\n                    messageSet.add(jsonData)\n                    return true\n                }\n            })\n        } else {\n            //using uuid in a Hashmap and a Set for the content to dedupe\n            //this approaching is explicitly targeting uuids and contents in seperate data structures, this keeps the type constant instead of converting the 2 fields into a string \n            return messages.filter((message) => {\n                if (!('uuid' in uuids)) {\n                    uuids.uuid = new Set([])\n                    uuids.uuid.add(message.content)\n                    return true\n                } else if ('uuid' in uuids) {\n                    if (!(uuids.uuid.has(message.content))) {\n                        uuids.uuid.add(message.content)\n                        return true\n                    }\n                }\n                else return false\n            })\n        }\n    }\n    const filtered = dedupeMessages(messages)\n\n\n    //Time formatting into human-readable string \"DayOfTheWeek Month Day, Year at Time\" \n\n    function timeFormatter(cell, row) {\n        let getTime = new Date(cell);\n        let time = getTime.toLocaleString(undefined, {\n            weekday: 'short',\n            day: 'numeric',\n            month: 'numeric',\n            year: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit',\n        })\n        return time\n    }\n\n    const options = {\n        defaultSortName: 'sentAt',\n        sortIndicator: true, // disable sort indicator\n        sizePerPageList: [{\n            text: '5', value: 5\n        }, {\n            text: '10', value: 10\n        }, {\n            text: '20', value: 20\n        }, {\n            text: 'All', value: filtered.length\n        }],\n        sizePerPage: 5,\n    };\n\n    //extra feature: selecting and highlighting row(s) \n    const selectRowProp = {\n        mode: 'checkbox',\n        bgColor: '#95A7E2'\n    };\n\n\n    //mapping and applying unique keys to each row\n    const result = filtered.map(item => {\n        return { ...item, uuid: uuidv4() }\n    })\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <BootstrapTable data={result} height='auto' maxHeight='500px' pagination={true} striped hover options={options} selectRow={selectRowProp} deleteRow={true}>\n                        <TableHeaderColumn isKey dataField='uuid' hidden> uuidv </TableHeaderColumn>\n                        <TableHeaderColumn dataField='senderUuid'> From (Sender ID)</TableHeaderColumn>\n                        <TableHeaderColumn dataField='content'> Message Content</TableHeaderColumn>\n                        <TableHeaderColumn dataField='sentAt' dataSort={true} dataFormat={timeFormatter}\n                        >Send Time</TableHeaderColumn >\n                    </BootstrapTable >\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport './style.css';\nimport MessageList from './components/MessageList';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\n\n\nclass App extends Component {\n\n  render() {\n    return <Container >\n      <MessageList />\n    </Container >\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}